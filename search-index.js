var N=null,E="",T="t",U="u",searchIndex={};
var R=["flumedb","flumedb::flume_log","sequence","result","error","append","latest","option","forward","backward","Examples ``` use bidir_iter::*;","readresult","gooffsetlog","Where path is a path to the directory that contains go log…","gooffsetlogiter","iter_at_offset","BidirIterator","Create a forward-moving Iterator, starting at the current…","Create a backward-moving Iterator, starting at the current…","filter_map","filtermap","data_size","ReadResult","CorruptLogFile","DecodeBufferSizeTooSmall","read_next","read_next_mut","offsetlog","open_read_only","append_batch","offsetlogiter","with_starting_offset","try_from","try_into","borrow_mut","to_string","type_id","flumedb::go_offset_log","borrow","typeid","as_fail","flumedb::log_entry","flumedb::mem_log","flumedb::offset_log","into_iter","formatter","backtrace","Attempts to downcast this `Error` to a particular `Fail`…","StreamOpts","FlumeLogError","FlumeLog","FlumeView","GoOffsetLog","GoFlumeOffsetLogError","GoOffsetLogIter","IterAtOffset","LogEntry","OffsetLog","FlumeOffsetLogError","OffsetLogIter","forward_owned","backward_owned"];
searchIndex["flumedb"]={"doc":R[0],"i":[[0,"flume_log",R[0],E,N,N],[3,"Error",R[1],"The `Error` type, which can contain any failure.",N,N],[3,R[48],E,E,N,N],[12,"lt",E,E,0,N],[12,"gt",E,E,0,N],[12,"reverse",E,E,0,N],[12,"live",E,E,0,N],[12,"limit",E,E,0,N],[4,R[49],E,E,N,N],[13,"SequenceNotFound",E,E,1,N],[12,R[2],"flumedb::flume_log::FlumeLogError",E,1,N],[6,"Sequence",R[1],E,N,N],[8,R[50],E,E,N,N],[10,"get",E,E,2,[[["self"],[R[2]]],[[R[3],["vec",R[4]]],["vec",["u8"]],[R[4]]]]],[10,"clear",E,E,2,[[["self"],[R[2]]]]],[10,R[6],E,E,2,[[["self"]],[[R[7],[R[2]]],[R[2]]]]],[10,R[5],E,E,2,[[["self"]],[[R[4]],[R[3],[R[2],R[4]]],[R[2]]]]],[0,"flume_view",R[0],E,N,N],[8,R[51],"flumedb::flume_view",E,N,N],[10,R[5],E,E,3,[[["self"],[R[2]]]]],[10,R[6],E,E,3,[[["self"]],[R[2]]]],[0,"go_offset_log",R[0],E,N,N],[8,R[16],R[37],E,N,N],[16,"Item",E,E,4,N],[10,"next",E,E,4,[[["self"]],[R[7]]]],[10,"prev",E,R[10],4,[[["self"]],[R[7]]]],[11,R[8],E,R[17],4,[[["self"]],[["self"],[R[8]]]]],[11,R[60],E,R[17],4,[[],[R[8]]]],[11,R[9],E,R[18],4,[[["self"]],[[R[9]],["self"]]]],[11,R[61],E,R[18],4,[[],[R[9]]]],[11,"filter",E,R[10],4,[[["p"]],["filter"]]],[11,"map",E,R[10],4,[[["f"]],["map"]]],[11,R[19],E,R[10],4,[[["f"]],[R[20]]]],[3,R[52],E,E,N,N],[12,"data_file",E,E,5,N],[3,"Frame",E,E,N,N],[12,R[21],E,E,6,N],[12,"offset",E,E,6,N],[3,R[22],E,E,N,N],[12,"entry",E,E,7,N],[12,"next",E,E,7,N],[3,R[54],E,E,N,N],[4,R[53],E,E,N,N],[13,R[23],E,E,8,N],[13,"CorruptJournalFile",E,E,8,N],[13,"CorruptOffsetFile",E,E,8,N],[13,"UnsupportedMessageType",E,E,8,N],[13,R[24],E,E,8,N],[5,R[25],E,E,N,[[["u64"],["r"]],[[R[3],[R[11],R[4]]],[R[11]],[R[4]]]]],[5,R[26],E,E,N,[[["u64"],["r"]],[[R[3],[R[11],R[4]]],[R[11]],[R[4]]]]],[11,"new",E,R[13],5,[[["path"],["asref",["path"]]],[[R[3],[R[12],R[4]]],[R[12]],[R[4]]]]],[11,R[28],E,R[13],5,[[["path"],["asref",["path"]]],[[R[3],[R[12],R[4]]],[R[12]],[R[4]]]]],[11,"from_files",E,E,5,[[["file"]],[[R[3],[R[12],R[4]]],[R[12]],[R[4]]]]],[11,"end",E,E,5,[[["self"]],["u64"]]],[11,"read",E,E,5,[[["self"],["u64"]],[[R[3],[R[11],R[4]]],[R[11]],[R[4]]]]],[11,R[29],E,E,5,[[["self"]],[[R[3],["vec",R[4]]],["vec",["u64"]],[R[4]]]]],[11,"iter",E,E,5,[[["self"]],[R[14]]]],[11,"new",E,E,9,[[["file"]],[R[14]]]],[11,R[31],E,E,9,[[["u64"],["file"]],[R[14]]]],[0,R[15],R[0],E,N,N],[8,R[55],"flumedb::iter_at_offset",E,N,N],[10,R[15],E,E,10,[[["self"],["u64"]],["i"]]],[0,"log_entry",R[0],E,N,N],[3,R[56],R[41],E,N,N],[12,"offset",E,E,11,N],[12,"data",E,E,11,N],[0,"mem_log",R[0],E,N,N],[3,"MemLog",R[42],E,N,N],[11,"new",E,E,12,[[],["memlog"]]],[0,"offset_log",R[0],E,N,N],[8,R[16],R[43],E,N,N],[16,"Item",E,E,4,N],[10,"next",E,E,4,[[["self"]],[R[7]]]],[10,"prev",E,R[10],4,[[["self"]],[R[7]]]],[11,R[8],E,R[17],4,[[["self"]],[["self"],[R[8]]]]],[11,R[60],E,R[17],4,[[],[R[8]]]],[11,R[9],E,R[18],4,[[["self"]],[[R[9]],["self"]]]],[11,R[61],E,R[18],4,[[],[R[9]]]],[11,"filter",E,R[10],4,[[["p"]],["filter"]]],[11,"map",E,R[10],4,[[["f"]],["map"]]],[11,R[19],E,R[10],4,[[["f"]],[R[20]]]],[3,"Forward",E,E,N,N],[3,R[57],E,E,N,N],[12,"file",E,E,13,N],[3,"Frame",E,E,N,N],[12,"offset",E,E,14,N],[12,R[21],E,E,14,N],[3,R[22],E,E,N,N],[12,"entry",E,E,15,N],[12,"next",E,E,15,N],[3,R[59],E,E,N,N],[4,R[58],E,E,N,N],[13,R[23],E,E,16,N],[13,R[24],E,E,16,N],[5,"encode",E,E,N,[[["bytesmut"],["u64"]],[[R[3],["u64",R[4]]],["u64"],[R[4]]]]],[5,"validate_entry",E,E,N,[[["u64"],["usize"]],[[R[3],["u64",R[4]]],["u64"],[R[4]]]]],[5,R[25],E,E,N,[[["u64"],["r"]],[[R[4]],[R[3],[R[11],R[4]]],[R[11]]]]],[5,R[26],E,E,N,[[["u64"],["r"]],[[R[4]],[R[3],[R[11],R[4]]],[R[11]]]]],[5,"read_prev",E,E,N,[[["u64"],["r"]],[[R[4]],[R[3],[R[11],R[4]]],[R[11]]]]],[5,"read_prev_mut",E,E,N,[[["u64"],["r"]],[[R[4]],[R[3],[R[11],R[4]]],[R[11]]]]],[11,"new",E,E,13,[[["path"],["asref",["path"]]],[[R[27]],[R[4]],[R[3],[R[27],R[4]]]]]],[11,R[28],E,E,13,[[["path"],["asref",["path"]]],[[R[27]],[R[4]],[R[3],[R[27],R[4]]]]]],[11,"from_file",E,E,13,[[["file"]],[[R[27]],[R[4]],[R[3],[R[27],R[4]]]]]],[11,"end",E,E,13,[[["self"]],["u64"]]],[11,"read",E,E,13,[[["self"],["u64"]],[[R[4]],[R[3],[R[11],R[4]]],[R[11]]]]],[11,R[29],E,E,13,[[["self"]],[[R[3],["vec",R[4]]],["vec",["u64"]],[R[4]]]]],[11,"iter",E,E,13,[[["self"]],[[R[30]],[R[8],[R[30]]]]]],[11,"bidir_iter",E,E,13,[[["self"]],[R[30]]]],[11,"bidir_iter_at_offset",E,E,13,[[["self"],["u64"]],[R[30]]]],[11,"new",E,E,17,[[["file"]],[R[30]]]],[11,R[31],E,E,17,[[["u64"],["file"]],[R[30]]]],[11,"into",R[1],E,18,[[],[U]]],[11,"from",E,E,18,[[],[T]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[35],E,E,18,[[["self"]],["string"]]],[11,R[32],E,E,18,[[[U]],[R[3]]]],[11,R[33],E,E,18,[[],[R[3]]]],[11,R[38],E,E,18,[[["self"]],[T]]],[11,R[34],E,E,18,[[["self"]],[T]]],[11,R[36],E,E,18,[[["self"]],[R[39]]]],[11,R[40],E,E,18,[[["self"]],["fail"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[32],E,E,0,[[[U]],[R[3]]]],[11,R[33],E,E,0,[[],[R[3]]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[["self"]],[R[39]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[35],E,E,1,[[["self"]],["string"]]],[11,R[32],E,E,1,[[[U]],[R[3]]]],[11,R[33],E,E,1,[[],[R[3]]]],[11,R[38],E,E,1,[[["self"]],[T]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[["self"]],[R[39]]]],[11,R[40],E,E,1,[[["self"]],["fail"]]],[11,"into",R[37],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[32],E,E,5,[[[U]],[R[3]]]],[11,R[33],E,E,5,[[],[R[3]]]],[11,R[38],E,E,5,[[["self"]],[T]]],[11,R[34],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[["self"]],[R[39]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[32],E,E,6,[[[U]],[R[3]]]],[11,R[33],E,E,6,[[],[R[3]]]],[11,R[38],E,E,6,[[["self"]],[T]]],[11,R[34],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[["self"]],[R[39]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[32],E,E,7,[[[U]],[R[3]]]],[11,R[33],E,E,7,[[],[R[3]]]],[11,R[38],E,E,7,[[["self"]],[T]]],[11,R[34],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[["self"]],[R[39]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[44],E,E,9,[[],["i"]]],[11,R[32],E,E,9,[[[U]],[R[3]]]],[11,R[33],E,E,9,[[],[R[3]]]],[11,R[38],E,E,9,[[["self"]],[T]]],[11,R[34],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[["self"]],[R[39]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[35],E,E,8,[[["self"]],["string"]]],[11,R[32],E,E,8,[[[U]],[R[3]]]],[11,R[33],E,E,8,[[],[R[3]]]],[11,R[38],E,E,8,[[["self"]],[T]]],[11,R[34],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[["self"]],[R[39]]]],[11,R[40],E,E,8,[[["self"]],["fail"]]],[11,"into",R[41],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[32],E,E,11,[[[U]],[R[3]]]],[11,R[33],E,E,11,[[],[R[3]]]],[11,R[38],E,E,11,[[["self"]],[T]]],[11,R[34],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[["self"]],[R[39]]]],[11,"into",R[42],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[32],E,E,12,[[[U]],[R[3]]]],[11,R[33],E,E,12,[[],[R[3]]]],[11,R[38],E,E,12,[[["self"]],[T]]],[11,R[34],E,E,12,[[["self"]],[T]]],[11,R[36],E,E,12,[[["self"]],[R[39]]]],[11,"into",R[43],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[44],E,E,19,[[],["i"]]],[11,R[32],E,E,19,[[[U]],[R[3]]]],[11,R[33],E,E,19,[[],[R[3]]]],[11,R[38],E,E,19,[[["self"]],[T]]],[11,R[34],E,E,19,[[["self"]],[T]]],[11,R[36],E,E,19,[[["self"]],[R[39]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[32],E,E,13,[[[U]],[R[3]]]],[11,R[33],E,E,13,[[],[R[3]]]],[11,R[38],E,E,13,[[["self"]],[T]]],[11,R[34],E,E,13,[[["self"]],[T]]],[11,R[36],E,E,13,[[["self"]],[R[39]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[32],E,E,14,[[[U]],[R[3]]]],[11,R[33],E,E,14,[[],[R[3]]]],[11,R[38],E,E,14,[[["self"]],[T]]],[11,R[34],E,E,14,[[["self"]],[T]]],[11,R[36],E,E,14,[[["self"]],[R[39]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[32],E,E,15,[[[U]],[R[3]]]],[11,R[33],E,E,15,[[],[R[3]]]],[11,R[38],E,E,15,[[["self"]],[T]]],[11,R[34],E,E,15,[[["self"]],[T]]],[11,R[36],E,E,15,[[["self"]],[R[39]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[32],E,E,17,[[[U]],[R[3]]]],[11,R[33],E,E,17,[[],[R[3]]]],[11,R[38],E,E,17,[[["self"]],[T]]],[11,R[34],E,E,17,[[["self"]],[T]]],[11,R[36],E,E,17,[[["self"]],[R[39]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[35],E,E,16,[[["self"]],["string"]]],[11,R[32],E,E,16,[[[U]],[R[3]]]],[11,R[33],E,E,16,[[],[R[3]]]],[11,R[38],E,E,16,[[["self"]],[T]]],[11,R[34],E,E,16,[[["self"]],[T]]],[11,R[36],E,E,16,[[["self"]],[R[39]]]],[11,R[40],E,E,16,[[["self"]],["fail"]]],[11,"next",E,E,19,[[["self"]],[R[7]]]],[11,R[40],R[1],E,18,[[["self"]],["fail"]]],[11,"fmt",E,E,18,[[[R[45]],["self"]],[[R[4]],[R[3],[R[4]]]]]],[11,"from",E,E,18,[[["f"]],[R[4]]]],[11,"fmt",E,E,18,[[[R[45]],["self"]],[[R[4]],[R[3],[R[4]]]]]],[11,"as_ref",E,E,18,[[["self"]],["fail"]]],[11,"get",R[42],E,12,[[["self"],["u64"]],[[R[3],["vec",R[4]]],["vec",["u8"]],[R[4]]]]],[11,"clear",E,E,12,[[["self"],["u64"]]]],[11,R[6],E,E,12,[[["self"]],[[R[7],["u64"]],["u64"]]]],[11,R[5],E,E,12,[[["self"]],[[R[3],["u64",R[4]]],["u64"],[R[4]]]]],[11,"get",R[43],E,13,[[["self"],["u64"]],[[R[3],["vec",R[4]]],["vec",["u8"]],[R[4]]]]],[11,R[6],E,E,13,[[["self"]],[[R[7],["u64"]],["u64"]]]],[11,R[5],E,E,13,[[["self"]],[[R[3],["u64",R[4]]],["u64"],[R[4]]]]],[11,"clear",E,E,13,[[["self"],["u64"]]]],[11,R[15],R[37],E,5,[[["self"],["u64"]],[R[14]]]],[11,R[15],R[43],E,13,[[["self"],["u64"]],[[R[30]],[R[8],[R[30]]]]]],[11,"next",R[37],E,9,[[["self"]],[R[7]]]],[11,"fmt",R[1],E,1,[[[R[45]],["self"]],[R[3]]]],[11,"fmt",R[37],E,8,[[[R[45]],["self"]],[R[3]]]],[11,"fmt",R[43],E,16,[[[R[45]],["self"]],[R[3]]]],[11,"fmt",R[1],E,1,[[["self"],[R[45]]],[R[3]]]],[11,"fmt",R[37],E,8,[[["self"],[R[45]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[45]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[45]]],[R[3]]]],[11,"fmt",R[41],E,11,[[["self"],[R[45]]],[R[3]]]],[11,"fmt",R[43],E,16,[[["self"],[R[45]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[45]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[45]]],[R[3]]]],[11,"next",E,E,17,[[["self"]],[R[7]]]],[11,"prev",E,E,17,[[["self"]],[R[7]]]],[11,"name",R[1],E,1,[[["self"]],[[R[7],["str"]],["str"]]]],[11,"cause",E,E,1,[[["self"]],[[R[7],["fail"]],["fail"]]]],[11,R[46],E,E,1,[[["self"]],[[R[46]],[R[7],[R[46]]]]]],[11,"name",R[37],E,8,[[["self"]],[[R[7],["str"]],["str"]]]],[11,"cause",E,E,8,[[["self"]],[[R[7],["fail"]],["fail"]]]],[11,R[46],E,E,8,[[["self"]],[[R[46]],[R[7],[R[46]]]]]],[11,"name",R[43],E,16,[[["self"]],[[R[7],["str"]],["str"]]]],[11,"cause",E,E,16,[[["self"]],[[R[7],["fail"]],["fail"]]]],[11,R[46],E,E,16,[[["self"]],[[R[46]],[R[7],[R[46]]]]]],[11,"from_boxed_compat",R[1],"Creates an `Error` from `Box<std::error::Error>`.",18,[[["box",[R[4]]],[R[4]]],[R[4]]]],[11,R[40],E,"Return a reference to the underlying failure that this…",18,[[["self"]],["fail"]]],[11,"name",E,"Returns the name of the underlying fail.",18,[[["self"]],[[R[7],["str"]],["str"]]]],[11,"cause",E,"Returns a reference to the underlying cause of this…",18,[[["self"]],["fail"]]],[11,R[46],E,"Gets a reference to the `Backtrace` for this `Error`.",18,[[["self"]],[R[46]]]],[11,"context",E,"Provides context for this `Error`.",18,[[["d"]],["context"]]],[11,"compat",E,"Wraps `Error` in a compatibility type.",18,[[],[["compat",[R[4]]],[R[4]]]]],[11,"downcast",E,R[47],18,[[],[[R[4]],[R[3],[R[4]]]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this error - the last value in…",18,[[["self"]],["fail"]]],[11,"iter_causes",E,"Returns a iterator over the causes of this error with the…",18,[[["self"]],["causes"]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",18,[[["self"]],["causes"]]],[11,"downcast_ref",E,R[47],18,[[["self"]],[[T],[R[7]]]]],[11,"downcast_mut",E,R[47],18,[[["self"]],[[T],[R[7]]]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",18,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_causes`.",18,[[["self"]],["causes"]]]],"p":[[3,R[48]],[4,R[49]],[8,R[50]],[8,R[51]],[8,R[16]],[3,R[52]],[3,"Frame"],[3,R[22]],[4,R[53]],[3,R[54]],[8,R[55]],[3,R[56]],[3,"MemLog"],[3,R[57]],[3,"Frame"],[3,R[22]],[4,R[58]],[3,R[59]],[3,"Error"],[3,"Forward"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);